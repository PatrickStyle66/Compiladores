
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATTR BEGIN COMMA CONCATENA DIFFERENT DIVIDE DIVIDER DO DOTCOMMA ELSE END EQUALS FOR FUNCTION GREAT GREATEQ HASHTAG ID IF INPUT INTEGER INVERTE LENGTH LESS LESSEQ LPAREN MINUS NUMBER OUTPUT PILHAINTEGER PILHAREAL PLUS PROCEDURE PROGRAM READ REAL REPEAT RNUMBER RPAREN THEN TIMES TO TWODOT TYPE UNTIL VAR WHILE WRITEprograma : PROGRAM ID DOTCOMMA corpocorpo : declara rotina BEGIN sentencas ENDempty :\n    declara : VAR dvar maisdc\n            | empty\n    maisdc : DOTCOMMA contadc\n    contadc : dvar maisdc\n            | empty\n    dvar : variaveis TYPE tipovar\n    tipovar : INTEGER\n            | REAL\n            | PILHAINTEGER\n            | PILHAREAL\n    variaveis : ID maisvar\n    maisvar : COMMA maisvar\n            | empty\n    \n    rotina : procedimento\n           | funcao\n           | empty\n    procedimento : PROCEDURE ID parametros DOTCOMMA corpo DOTCOMMA rotinafuncao : FUNCTION ID parametros TYPE tipofuncao DOTCOMMA corpo DOTCOMMA rotina\n    parametros : LPAREN listaparametros RPAREN\n               | empty\n    listaparametros : listaid TYPE tipovar contlistaparcontlistapar : DOTCOMMA listaparametros\n                    | empty\n    listaid : ID contlistaid\n    contlistaid : DOTCOMMA listaparametros\n                | empty\n    \n    tipofuncao : INTEGER\n               | REAL\n               | PILHAINTEGER\n               | PILHAREAL\n    sentencas : comando maissentencasmaissentencas : DOTCOMMA contsentencas\n    contsentencas : sentencas\n                  | empty\n    varread : ID maisvarread\n    maisvarread : COMMA varread\n                | empty\n    varwrite : ID maisvarwrite\n    maisvarwrite : COMMA varwrite\n                 | empty\n    \n    comando : READ LPAREN varread RPAREN\n            | IF LPAREN condicao RPAREN THEN BEGIN sentencas END pfalsa\n            | FOR ID ATTR expressao TO expressao DO BEGIN sentencas END\n            | atribuicao\n            | WRITE LPAREN varwrite RPAREN\n            | WHILE LPAREN condicao RPAREN DO BEGIN sentencas END\n            | REPEAT sentencas UNTIL LPAREN condicao RPAREN\n            | chamadaprocedimento\n    atribuicao : ID ATTR expressaochamadaprocedimento : ID argumentos\n    argumentos : LPAREN listaarg RPAREN\n               | empty\n    listaarg : expressao contlistaarg\n    contlistaarg : COMMA listaarg\n                 | empty\n    \n    condicao :  relacao LPAREN expressaonum COMMA expressaonum RPAREN\n             | relacao LPAREN expressaopilha COMMA expressaopilha RPAREN\n    \n    pfalsa : ELSE BEGIN sentencas END\n           | empty\n    \n    relacao : EQUALS\n            | GREAT\n            | LESS\n            | GREATEQ\n            | LESSEQ\n            | DIFFERENT\n    \n    expressao : expressaonum\n              | expressaopilha\n    \n    expressaonum : termo\n                 | ID argumentos\n    \n    operando : ID\n             | integernum\n             | realnum\n             | operador LPAREN operando COMMA operando RPAREN\n    \n    operador : PLUS\n             | MINUS\n             | TIMES\n             | DIVIDE\n             | DIVIDER\n    \n    termo : operador LPAREN operando COMMA operando RPAREN\n          | ID\n          | integernum\n          | realnum\n    \n    expressaopilha : oppilha LPAREN conteudo RPAREN\n                   | CONCATENA LPAREN conteudo COMMA conteudo RPAREN\n                   | INVERTE LPAREN conteudo RPAREN\n    \n    conteudo : HASHTAG HASHTAG\n             | HASHTAG integernum integernumcont HASHTAG\n             | HASHTAG realnum realnumcont HASHTAG\n    \n    integernumcont : COMMA integernum integernumcont\n                   | empty\n    \n    realnumcont : COMMA realnum realnumcont\n                | empty\n    \n    oppilha : INPUT\n            | OUTPUT\n            | LENGTH\n    integernum : NUMBERrealnum : RNUMBER'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,51,],[0,-1,-2,]),'ID':([2,7,13,14,18,22,31,36,39,53,54,57,59,61,83,115,124,127,133,136,140,152,168,171,172,181,182,183,205,211,221,],[3,17,19,20,32,17,56,32,67,32,74,84,84,108,84,67,74,84,159,84,108,84,67,32,84,159,159,32,32,159,32,]),'DOTCOMMA':([3,15,19,28,32,33,37,38,40,43,45,46,47,48,49,51,58,60,67,84,85,86,87,88,93,94,103,104,111,112,117,118,119,120,121,122,129,134,138,145,170,175,180,184,202,210,212,213,214,216,222,225,],[4,22,-3,53,-3,-47,-51,64,-23,22,-9,-10,-11,-12,-13,-2,-53,-55,115,-3,-52,-69,-70,-71,-84,-85,-99,-100,144,-22,147,-30,-31,-32,-33,-44,-72,-54,-48,168,186,-86,-88,-50,-3,-87,-82,-49,-45,-62,-46,-61,]),'VAR':([4,64,147,],[7,7,7,]),'PROCEDURE':([4,6,8,21,22,42,44,64,69,144,147,186,],[-3,13,-5,-4,-3,-6,-8,-3,-7,13,-3,13,]),'FUNCTION':([4,6,8,21,22,42,44,64,69,144,147,186,],[-3,14,-5,-4,-3,-6,-8,-3,-7,14,-3,14,]),'BEGIN':([4,6,8,9,10,11,12,21,22,42,44,64,69,144,147,149,164,166,186,190,201,215,],[-3,-3,-5,18,-17,-18,-19,-4,-3,-6,-8,-3,-7,-3,-3,171,183,-20,-3,205,-21,221,]),'TYPE':([16,17,20,24,25,26,40,41,46,47,48,49,50,66,67,112,114,116,145,146,167,169,185,],[23,-3,-3,-14,-3,-16,-23,68,-10,-11,-12,-13,-15,113,-3,-22,-27,-29,-3,-28,-24,-26,-25,]),'COMMA':([17,25,60,74,84,86,87,88,93,94,103,104,106,108,129,134,150,151,155,158,159,160,161,175,176,177,178,180,198,206,207,208,209,210,212,223,],[25,25,-55,124,-3,-69,-70,-71,-84,-85,-99,-100,136,140,-72,-54,172,173,179,182,-73,-74,-75,-86,-89,192,195,-88,211,-90,192,-91,195,-87,-82,-76,]),'READ':([18,36,53,171,183,205,221,],[29,29,29,29,29,29,29,]),'IF':([18,36,53,171,183,205,221,],[30,30,30,30,30,30,30,]),'FOR':([18,36,53,171,183,205,221,],[31,31,31,31,31,31,31,]),'WRITE':([18,36,53,171,183,205,221,],[34,34,34,34,34,34,34,]),'WHILE':([18,36,53,171,183,205,221,],[35,35,35,35,35,35,35,]),'REPEAT':([18,36,53,171,183,205,221,],[36,36,36,36,36,36,36,]),'LPAREN':([19,20,29,30,32,34,35,76,77,78,79,80,81,82,84,89,90,91,92,95,96,97,98,99,100,101,102,110,157,],[39,39,54,55,59,61,62,127,-63,-64,-65,-66,-67,-68,59,130,131,132,133,-96,-97,-98,-77,-78,-79,-80,-81,143,181,]),'INTEGER':([23,68,113,],[46,118,46,]),'REAL':([23,68,113,],[47,119,47,]),'PILHAINTEGER':([23,68,113,],[48,120,48,]),'PILHAREAL':([23,68,113,],[49,121,49,]),'END':([27,52,53,70,71,72,187,200,217,224,],[51,-34,-3,-35,-36,-37,202,213,222,225,]),'ATTR':([32,56,],[57,83,]),'RPAREN':([46,47,48,49,60,65,73,74,75,84,86,87,88,93,94,103,104,105,106,107,108,109,123,125,129,134,135,137,139,141,145,148,153,156,159,160,161,162,163,165,167,169,175,176,180,185,188,189,197,199,203,204,206,208,210,212,220,223,],[-10,-11,-12,-13,-55,112,122,-3,126,-3,-69,-70,-71,-84,-85,-99,-100,134,-3,138,-3,142,-38,-40,-72,-54,-56,-58,-41,-43,-3,-39,175,180,-73,-74,-75,-57,-42,184,-24,-26,-86,-89,-88,-25,203,204,210,212,-59,-60,-90,-91,-87,-82,223,-76,]),'UNTIL':([52,53,63,70,71,72,],[-34,-3,110,-35,-36,-37,]),'EQUALS':([55,62,143,],[77,77,77,]),'GREAT':([55,62,143,],[78,78,78,]),'LESS':([55,62,143,],[79,79,79,]),'GREATEQ':([55,62,143,],[80,80,80,]),'LESSEQ':([55,62,143,],[81,81,81,]),'DIFFERENT':([55,62,143,],[82,82,82,]),'CONCATENA':([57,59,83,127,136,152,173,],[90,90,90,90,90,90,90,]),'INVERTE':([57,59,83,127,136,152,173,],[91,91,91,91,91,91,91,]),'INPUT':([57,59,83,127,136,152,173,],[95,95,95,95,95,95,95,]),'OUTPUT':([57,59,83,127,136,152,173,],[96,96,96,96,96,96,96,]),'LENGTH':([57,59,83,127,136,152,173,],[97,97,97,97,97,97,97,]),'PLUS':([57,59,83,127,133,136,152,172,181,182,211,],[98,98,98,98,98,98,98,98,98,98,98,]),'MINUS':([57,59,83,127,133,136,152,172,181,182,211,],[99,99,99,99,99,99,99,99,99,99,99,]),'TIMES':([57,59,83,127,133,136,152,172,181,182,211,],[100,100,100,100,100,100,100,100,100,100,100,]),'DIVIDE':([57,59,83,127,133,136,152,172,181,182,211,],[101,101,101,101,101,101,101,101,101,101,101,]),'DIVIDER':([57,59,83,127,133,136,152,172,181,182,211,],[102,102,102,102,102,102,102,102,102,102,102,]),'NUMBER':([57,59,83,127,133,136,152,154,172,181,182,192,211,],[103,103,103,103,103,103,103,103,103,103,103,103,103,]),'RNUMBER':([57,59,83,127,133,136,152,154,172,181,182,195,211,],[104,104,104,104,104,104,104,104,104,104,104,104,104,]),'TO':([60,84,86,87,88,93,94,103,104,128,129,134,175,180,210,212,],[-55,-3,-69,-70,-71,-84,-85,-99,-100,152,-72,-54,-86,-88,-87,-82,]),'DO':([60,84,86,87,88,93,94,103,104,129,134,142,174,175,180,210,212,],[-55,-3,-69,-70,-71,-84,-85,-99,-100,-72,-54,164,190,-86,-88,-87,-82,]),'HASHTAG':([103,104,130,131,132,154,177,178,179,191,193,194,196,207,209,218,219,],[-99,-100,154,154,154,176,-3,-3,154,206,-93,208,-95,-3,-3,-92,-94,]),'THEN':([126,],[149,]),'ELSE':([202,],[215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'corpo':([4,64,147,],[5,111,170,]),'declara':([4,64,147,],[6,6,6,]),'empty':([4,6,17,19,20,22,25,32,53,64,67,74,84,106,108,144,145,147,177,178,186,202,207,209,],[8,12,26,40,40,44,26,60,72,8,116,125,60,137,141,12,169,8,193,196,12,216,193,196,]),'rotina':([6,144,186,],[9,166,201,]),'procedimento':([6,144,186,],[10,10,10,]),'funcao':([6,144,186,],[11,11,11,]),'dvar':([7,22,],[15,43,]),'variaveis':([7,22,],[16,16,]),'maisdc':([15,43,],[21,69,]),'maisvar':([17,25,],[24,50,]),'sentencas':([18,36,53,171,183,205,221,],[27,63,71,187,200,217,224,]),'comando':([18,36,53,171,183,205,221,],[28,28,28,28,28,28,28,]),'atribuicao':([18,36,53,171,183,205,221,],[33,33,33,33,33,33,33,]),'chamadaprocedimento':([18,36,53,171,183,205,221,],[37,37,37,37,37,37,37,]),'parametros':([19,20,],[38,41,]),'contadc':([22,],[42,]),'tipovar':([23,113,],[45,145,]),'maissentencas':([28,],[52,]),'argumentos':([32,84,],[58,129,]),'listaparametros':([39,115,168,],[65,146,185,]),'listaid':([39,115,168,],[66,66,66,]),'contsentencas':([53,],[70,]),'varread':([54,124,],[73,148,]),'condicao':([55,62,143,],[75,109,165,]),'relacao':([55,62,143,],[76,76,76,]),'expressao':([57,59,83,136,152,],[85,106,128,106,174,]),'expressaonum':([57,59,83,127,136,152,172,],[86,86,86,150,86,86,188,]),'expressaopilha':([57,59,83,127,136,152,173,],[87,87,87,151,87,87,189,]),'termo':([57,59,83,127,136,152,172,],[88,88,88,88,88,88,88,]),'oppilha':([57,59,83,127,136,152,173,],[89,89,89,89,89,89,89,]),'operador':([57,59,83,127,133,136,152,172,181,182,211,],[92,92,92,92,157,92,92,92,157,157,157,]),'integernum':([57,59,83,127,133,136,152,154,172,181,182,192,211,],[93,93,93,93,160,93,93,177,93,160,160,207,160,]),'realnum':([57,59,83,127,133,136,152,154,172,181,182,195,211,],[94,94,94,94,161,94,94,178,94,161,161,209,161,]),'listaarg':([59,136,],[105,162,]),'varwrite':([61,140,],[107,163,]),'contlistaid':([67,],[114,]),'tipofuncao':([68,],[117,]),'maisvarread':([74,],[123,]),'contlistaarg':([106,],[135,]),'maisvarwrite':([108,],[139,]),'conteudo':([130,131,132,179,],[153,155,156,197,]),'operando':([133,181,182,211,],[158,198,199,220,]),'contlistapar':([145,],[167,]),'integernumcont':([177,207,],[191,218,]),'realnumcont':([178,209,],[194,219,]),'pfalsa':([202,],[214,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID DOTCOMMA corpo','programa',4,'p_programa','Syntatic.py',7),
  ('corpo -> declara rotina BEGIN sentencas END','corpo',5,'p_corpo','Syntatic.py',10),
  ('empty -> <empty>','empty',0,'p_empty','Syntatic.py',12),
  ('declara -> VAR dvar maisdc','declara',3,'p_declara','Syntatic.py',17),
  ('declara -> empty','declara',1,'p_declara','Syntatic.py',18),
  ('maisdc -> DOTCOMMA contadc','maisdc',2,'p_maisdc','Syntatic.py',22),
  ('contadc -> dvar maisdc','contadc',2,'p_contadc','Syntatic.py',26),
  ('contadc -> empty','contadc',1,'p_contadc','Syntatic.py',27),
  ('dvar -> variaveis TYPE tipovar','dvar',3,'p_dvar','Syntatic.py',31),
  ('tipovar -> INTEGER','tipovar',1,'p_tipovar','Syntatic.py',36),
  ('tipovar -> REAL','tipovar',1,'p_tipovar','Syntatic.py',37),
  ('tipovar -> PILHAINTEGER','tipovar',1,'p_tipovar','Syntatic.py',38),
  ('tipovar -> PILHAREAL','tipovar',1,'p_tipovar','Syntatic.py',39),
  ('variaveis -> ID maisvar','variaveis',2,'p_variaveis','Syntatic.py',46),
  ('maisvar -> COMMA maisvar','maisvar',2,'p_maisvar','Syntatic.py',52),
  ('maisvar -> empty','maisvar',1,'p_maisvar','Syntatic.py',53),
  ('rotina -> procedimento','rotina',1,'p_rotina','Syntatic.py',58),
  ('rotina -> funcao','rotina',1,'p_rotina','Syntatic.py',59),
  ('rotina -> empty','rotina',1,'p_rotina','Syntatic.py',60),
  ('procedimento -> PROCEDURE ID parametros DOTCOMMA corpo DOTCOMMA rotina','procedimento',7,'p_procedimento','Syntatic.py',64),
  ('funcao -> FUNCTION ID parametros TYPE tipofuncao DOTCOMMA corpo DOTCOMMA rotina','funcao',9,'p_funcao','Syntatic.py',68),
  ('parametros -> LPAREN listaparametros RPAREN','parametros',3,'p_parametros','Syntatic.py',74),
  ('parametros -> empty','parametros',1,'p_parametros','Syntatic.py',75),
  ('listaparametros -> listaid TYPE tipovar contlistapar','listaparametros',4,'p_listaparmetros','Syntatic.py',79),
  ('contlistapar -> DOTCOMMA listaparametros','contlistapar',2,'p_contlistapar','Syntatic.py',82),
  ('contlistapar -> empty','contlistapar',1,'p_contlistapar','Syntatic.py',83),
  ('listaid -> ID contlistaid','listaid',2,'p_listaid','Syntatic.py',87),
  ('contlistaid -> DOTCOMMA listaparametros','contlistaid',2,'p_contlistaid','Syntatic.py',95),
  ('contlistaid -> empty','contlistaid',1,'p_contlistaid','Syntatic.py',96),
  ('tipofuncao -> INTEGER','tipofuncao',1,'p_tipofuncao','Syntatic.py',102),
  ('tipofuncao -> REAL','tipofuncao',1,'p_tipofuncao','Syntatic.py',103),
  ('tipofuncao -> PILHAINTEGER','tipofuncao',1,'p_tipofuncao','Syntatic.py',104),
  ('tipofuncao -> PILHAREAL','tipofuncao',1,'p_tipofuncao','Syntatic.py',105),
  ('sentencas -> comando maissentencas','sentencas',2,'p_sentencas','Syntatic.py',110),
  ('maissentencas -> DOTCOMMA contsentencas','maissentencas',2,'p_maissentencas','Syntatic.py',113),
  ('contsentencas -> sentencas','contsentencas',1,'p_contsentencas','Syntatic.py',117),
  ('contsentencas -> empty','contsentencas',1,'p_contsentencas','Syntatic.py',118),
  ('varread -> ID maisvarread','varread',2,'p_varread','Syntatic.py',122),
  ('maisvarread -> COMMA varread','maisvarread',2,'p_maisvarread','Syntatic.py',126),
  ('maisvarread -> empty','maisvarread',1,'p_maisvarread','Syntatic.py',127),
  ('varwrite -> ID maisvarwrite','varwrite',2,'p_varwrite','Syntatic.py',131),
  ('maisvarwrite -> COMMA varwrite','maisvarwrite',2,'p_maisvarwrite','Syntatic.py',135),
  ('maisvarwrite -> empty','maisvarwrite',1,'p_maisvarwrite','Syntatic.py',136),
  ('comando -> READ LPAREN varread RPAREN','comando',4,'p_comando','Syntatic.py',141),
  ('comando -> IF LPAREN condicao RPAREN THEN BEGIN sentencas END pfalsa','comando',9,'p_comando','Syntatic.py',142),
  ('comando -> FOR ID ATTR expressao TO expressao DO BEGIN sentencas END','comando',10,'p_comando','Syntatic.py',143),
  ('comando -> atribuicao','comando',1,'p_comando','Syntatic.py',144),
  ('comando -> WRITE LPAREN varwrite RPAREN','comando',4,'p_comando','Syntatic.py',145),
  ('comando -> WHILE LPAREN condicao RPAREN DO BEGIN sentencas END','comando',8,'p_comando','Syntatic.py',146),
  ('comando -> REPEAT sentencas UNTIL LPAREN condicao RPAREN','comando',6,'p_comando','Syntatic.py',147),
  ('comando -> chamadaprocedimento','comando',1,'p_comando','Syntatic.py',148),
  ('atribuicao -> ID ATTR expressao','atribuicao',3,'p_atribuicao','Syntatic.py',152),
  ('chamadaprocedimento -> ID argumentos','chamadaprocedimento',2,'p_chamadaprocedimento','Syntatic.py',156),
  ('argumentos -> LPAREN listaarg RPAREN','argumentos',3,'p_argumentos','Syntatic.py',160),
  ('argumentos -> empty','argumentos',1,'p_argumentos','Syntatic.py',161),
  ('listaarg -> expressao contlistaarg','listaarg',2,'p_listaarg','Syntatic.py',165),
  ('contlistaarg -> COMMA listaarg','contlistaarg',2,'p_contlistaarg','Syntatic.py',169),
  ('contlistaarg -> empty','contlistaarg',1,'p_contlistaarg','Syntatic.py',170),
  ('condicao -> relacao LPAREN expressaonum COMMA expressaonum RPAREN','condicao',6,'p_condicao','Syntatic.py',175),
  ('condicao -> relacao LPAREN expressaopilha COMMA expressaopilha RPAREN','condicao',6,'p_condicao','Syntatic.py',176),
  ('pfalsa -> ELSE BEGIN sentencas END','pfalsa',4,'p_pfalsa','Syntatic.py',181),
  ('pfalsa -> empty','pfalsa',1,'p_pfalsa','Syntatic.py',182),
  ('relacao -> EQUALS','relacao',1,'p_relacao','Syntatic.py',187),
  ('relacao -> GREAT','relacao',1,'p_relacao','Syntatic.py',188),
  ('relacao -> LESS','relacao',1,'p_relacao','Syntatic.py',189),
  ('relacao -> GREATEQ','relacao',1,'p_relacao','Syntatic.py',190),
  ('relacao -> LESSEQ','relacao',1,'p_relacao','Syntatic.py',191),
  ('relacao -> DIFFERENT','relacao',1,'p_relacao','Syntatic.py',192),
  ('expressao -> expressaonum','expressao',1,'p_expressao','Syntatic.py',197),
  ('expressao -> expressaopilha','expressao',1,'p_expressao','Syntatic.py',198),
  ('expressaonum -> termo','expressaonum',1,'p_expressaonum','Syntatic.py',203),
  ('expressaonum -> ID argumentos','expressaonum',2,'p_expressaonum','Syntatic.py',204),
  ('operando -> ID','operando',1,'p_operando','Syntatic.py',209),
  ('operando -> integernum','operando',1,'p_operando','Syntatic.py',210),
  ('operando -> realnum','operando',1,'p_operando','Syntatic.py',211),
  ('operando -> operador LPAREN operando COMMA operando RPAREN','operando',6,'p_operando','Syntatic.py',212),
  ('operador -> PLUS','operador',1,'p_operador','Syntatic.py',217),
  ('operador -> MINUS','operador',1,'p_operador','Syntatic.py',218),
  ('operador -> TIMES','operador',1,'p_operador','Syntatic.py',219),
  ('operador -> DIVIDE','operador',1,'p_operador','Syntatic.py',220),
  ('operador -> DIVIDER','operador',1,'p_operador','Syntatic.py',221),
  ('termo -> operador LPAREN operando COMMA operando RPAREN','termo',6,'p_termo','Syntatic.py',226),
  ('termo -> ID','termo',1,'p_termo','Syntatic.py',227),
  ('termo -> integernum','termo',1,'p_termo','Syntatic.py',228),
  ('termo -> realnum','termo',1,'p_termo','Syntatic.py',229),
  ('expressaopilha -> oppilha LPAREN conteudo RPAREN','expressaopilha',4,'p_expressaopilha','Syntatic.py',234),
  ('expressaopilha -> CONCATENA LPAREN conteudo COMMA conteudo RPAREN','expressaopilha',6,'p_expressaopilha','Syntatic.py',235),
  ('expressaopilha -> INVERTE LPAREN conteudo RPAREN','expressaopilha',4,'p_expressaopilha','Syntatic.py',236),
  ('conteudo -> HASHTAG HASHTAG','conteudo',2,'p_conteudo','Syntatic.py',241),
  ('conteudo -> HASHTAG integernum integernumcont HASHTAG','conteudo',4,'p_conteudo','Syntatic.py',242),
  ('conteudo -> HASHTAG realnum realnumcont HASHTAG','conteudo',4,'p_conteudo','Syntatic.py',243),
  ('integernumcont -> COMMA integernum integernumcont','integernumcont',3,'p_integernumcont','Syntatic.py',248),
  ('integernumcont -> empty','integernumcont',1,'p_integernumcont','Syntatic.py',249),
  ('realnumcont -> COMMA realnum realnumcont','realnumcont',3,'p_realnumcont','Syntatic.py',254),
  ('realnumcont -> empty','realnumcont',1,'p_realnumcont','Syntatic.py',255),
  ('oppilha -> INPUT','oppilha',1,'p_oppilha','Syntatic.py',260),
  ('oppilha -> OUTPUT','oppilha',1,'p_oppilha','Syntatic.py',261),
  ('oppilha -> LENGTH','oppilha',1,'p_oppilha','Syntatic.py',262),
  ('integernum -> NUMBER','integernum',1,'p_integernum','Syntatic.py',266),
  ('realnum -> RNUMBER','realnum',1,'p_realnum','Syntatic.py',269),
]
